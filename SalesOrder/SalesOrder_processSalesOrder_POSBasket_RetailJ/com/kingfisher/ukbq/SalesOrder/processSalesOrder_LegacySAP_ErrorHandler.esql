BROKER SCHEMA com.kingfisher.ukbq.SalesOrder

/****************************************************************************************************
* COPYRIGHT. <KINGFISHER INFORMATION TECHNOLOGY SERVICES 2012> ALL RIGHTS RESERVED. NO PART OF THIS *
* SOURCE CODE MAY BE REPRODUCED, STORED IN A RETRIEVAL SYSTEM, OR TRANSMITTED,IN ANY 				*
* FORM BY ANY MEANS, ELECTRONIC, MECHANICAL, PHOTOCOPYING, RECORDING OR OTHERWISE, 					*
* WITHOUT THE PRIOR WRITTEN PERMISSION OF <KINGFISHER INFORMATION TECHNOLOGY SERVICES>. 			*
****************************************************************************************************/

/****************************************************************************************************
* Node Name 				: ProcessSalesOrder_LegacySAP_ErrorHandler								*
* Interface Id 				:  					 													*
* Interface Name 			: SalesOrder_processSalesOrder_POSBasket								*
* Message Flow 				: ProcessSalesOrder_LegacySAP											*
* Message Flow Description 	: Create ProcessSalesOrder message										*
* Module Name 				: processSalesOrder_LegacySAP_ErrorHandler		 						*
* Description 				: Create error message for Generic SAP RFC response						*
*																									*
* Version 	Date Author 	Author 				Description											*
* ======= 	========= 		================ 	=================== 								*
* 0.1 		01-APR-2013 	Sayantan Som 		The initial version. 								*
****************************************************************************************************/
CREATE COMPUTE MODULE processSalesOrder_LegacySAP_ErrorHandler
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		SET OutputRoot.DataObject.ns3:SapZRetCcardPaymentsWrapper.SapZRetCcardPayments.PT_IB_ERR_CODE = CAST(COALESCE(Environment.Variables.SQLSTATE,SQLSTATE) AS CHARACTER);
		SET OutputRoot.DataObject.ns3:SapZRetCcardPaymentsWrapper.SapZRetCcardPayments.PT_IB_ERR_MSG = 'Error in Message Processing';			
		RETURN TRUE;
	END;
	
	/************************************************************************************
	* Procedure Name     :CopyMessageHeaders	             	    					*
	* Input Parameters   :None          			                                    *
	* Output Parameters  :None			            	                                *
	* Description        :Procedure to copy message header from input		            *
	* Version 	Date 			Author 			Description                             *
	* ======= 	=========== 	=========== 	================================        *
	*  0.1   	08-APR-2013 	Sayantan Som 	The initial version.                    *
	************************************************************************************/
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	
	/************************************************************************************
	* Procedure Name     :CopyEntireMessage	             	    						*
	* Input Parameters   :None          			                                    *
	* Output Parameters  :None			            	                                *
	* Description        :Procedure to copy entire message from input to output         *
	* Version 	Date 			Author 			Description                             *
	* ======= 	=========== 	=========== 	================================        *
	*  0.1   	08-APR-2013 	Sayantan Som 	The initial version.                    *
	************************************************************************************/
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
