BROKER SCHEMA com.kingfisher.ukbq.SalesOrder

/****************************************************************************************************
* COPYRIGHT. <KINGFISHER INFORMATION TECHNOLOGY SERVICES 2012> ALL RIGHTS RESERVED. NO PART OF THIS *
* SOURCE CODE MAY BE REPRODUCED, STORED IN A RETRIEVAL SYSTEM, OR TRANSMITTED,IN ANY 				*
* FORM BY ANY MEANS, ELECTRONIC, MECHANICAL, PHOTOCOPYING, RECORDING OR OTHERWISE, 					*
* WITHOUT THE PRIOR WRITTEN PERMISSION OF <KINGFISHER INFORMATION TECHNOLOGY SERVICES>. 			*
****************************************************************************************************/

/****************************************************************************************************
* Node Name 				: Payment_LoanTenderItem												*
* Interface Id 				:  					 													*
* Interface Name 			: SalesOrder_processSalesOrder_POSBasket								*
* Message Flow 				: ProcessSalesOrder_POSBasket_RetailJ									*
* Message Flow Description 	: Convert POSBasket message to ProcessSalesOrder Mesasge				*
* Module Name 				: ProcessSalesOrder_POSBasket_RetailJ_LoanTenderItem					*
* Description 				: Populate details for LoanTenderItem									*
*																									*
* Version 	Date Author 	Author 				Description											*
* ======= 	========= 		================ 	=================== 								*
* 0.1 		1-APR-2013 		Sayantan Som 		The initial version. 								*
* 0.2 		19-JUN-2013 	Asif Hossain 		Code fixed for defect #63,VoidStaus was being 		*
*												populated though there was no voidvalue present in  *
*												input. 												*
* 0.3 		22-JUN-2013 	Soutam Dutta 		Validated against ProcessSalesOrder xsd. 			*
* 0.4 		02-JUL-2013 	Soutam Dutta 		ChangeAmount is populated by dividing by 100. 		*
****************************************************************************************************/
CREATE COMPUTE MODULE ProcessSalesOrder_POSBasket_RetailJ_LoanTenderItem
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE REF_INRoot				REFERENCE TO InputRoot.XMLNSC.POSBasket;

		DECLARE REF_OUTSalesOrder		REFERENCE TO Environment.Variables.OutMessage.NS_dfns:ProcessSalesOrder;
		DECLARE REF_OUTSalesLine		REFERENCE TO REF_OUTSalesOrder.NS_dfns:DataArea.NS_dfns:SalesOrder;
		DECLARE	REF_OUTSalesOrderHeader	REFERENCE TO REF_OUTSalesLine.NS_dfns:SalesOrderHeader;
		DECLARE REF_OUTApplicationArea	REFERENCE TO REF_OUTSalesOrder.NS_oa:ApplicationArea;
		DECLARE REF_Payment				REFERENCE TO REF_OUTSalesOrderHeader.NS_dfns:Payment;
		DECLARE TS_TimeStamp			TIMESTAMP;
		DECLARE CH_RetJTend				CHARACTER;
		
		
		DECLARE REF_LTItem 				REFERENCE TO REF_INRoot.LoanTenderItem;
		DECLARE CH_LineNumber 			CHARACTER;
		DECLARE IN_Count 				INTEGER;
		
		--FOR REF_LTItem AS REF_INRoot.LoanTenderItem[] DO
		LTI:WHILE LASTMOVE(REF_LTItem)DO
			SET CH_LineNumber = REF_LTItem.LineNumber;
			IF REF_LTItem.LineNumber NOT IN(Environment.LineNumber.{CH_LineNumber}[]) THEN 
				CREATE LASTCHILD OF Environment.LineNumber.{CH_LineNumber};
			
				SET IN_Count = CARDINALITY(REF_OUTSalesOrderHeader.NS_dfns:Payment[]);	
				CREATE NEXTSIBLING OF REF_OUTSalesOrderHeader.NS_dfns:Payment[IN_Count] AS REF_Payment REPEAT;
				--CREATE NEXTSIBLING OF REF_OUTSalesOrderHeader.NS_dfns:Payment AS REF_Payment REPEAT;
			
				IF COALESCE(REF_LTItem.TenderType,'') <> '' AND COALESCE(REF_LTItem.TenderSubType,'') <> '' THEN
					SET CH_RetJTend															= REF_LTItem.TenderType || REF_LTItem.TenderSubType;
					SET REF_Payment.(XMLNSC.Attribute)type 									= 'LOAN TENDER';
	--				SET REF_Payment.(XMLNSC.Attribute)id 									= THE(SELECT ITEM T.TENDERID FROM Database.TENDERDATA AS T
	--																								WHERE T.RETAILJCARDTYPE = CH_RetJTend);
																									
					SET REF_Payment.(XMLNSC.Attribute)id 									= THE(SELECT ITEM T.TENDERID FROM CACHE_CONFIGDATA.TENDERDATA[] AS T
																									WHERE T.RETAILJCARDTYPE = CH_RetJTend);
				END IF;
				SET REF_Payment.NS_dfns:Loan.NS_oa:Number									= REF_LTItem.LoanAgreementReference;
				
				--Code comment starts for version 0.2 defect #63 
				--SET TS_TimeStamp	= CAST(REF_LTItem.VoidDateTime AS TIMESTAMP FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				--SET REF_Payment.NS_dfns:VoidStatus.NS_oa:EffectiveDateTime				= CAST(TS_TimeStamp AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				--Code comment ends for version 0.2 defect #63
				--Code comment start for version 0.4
				--IF (COALESCE(REF_LTItem.IssuedAsChange,'') <> '1') AND (COALESCE(REF_LTItem.TenderAmount,'') <> '')  THEN
				--Code comment end for version 0.4	
					
				--Code change start for version 0.4
				IF (COALESCE(REF_LTItem.IssuedAsChange,'') <> '1') AND (COALESCE(REF_LTItem.TenderAmount,'') <> '')  THEN
					--Code change end for version 0.4
				
					SET REF_Payment.NS_oa:Amount											= FUNC_ConvertPennytoPound(REF_LTItem.TenderAmount,-1,2,NULL);
					SET REF_Payment.NS_oa:Amount.(XMLNSC.Attribute)currencyID				= InputRoot.XMLNSC.POSBasket.Header.BasketCurrencyID;
					--Code comment start for version 0.4
					--SET REF_Payment.NS_dfns:ChangeAmount									= FUNC_ConvertPennytoPound(REF_LTItem.TenderAmount,-1,2,NULL);
					--Code comment end for version 0.4
				END IF;
				
				--Code change start for version 0.4
				IF (COALESCE(REF_LTItem.IssuedAsChange,'') = '1') AND (COALESCE(REF_LTItem.TenderAmount,'') <> '')  THEN
					SET REF_Payment.NS_dfns:ChangeAmount									= FUNC_ConvertPennytoPound(REF_LTItem.TenderAmount,1,2,NULL);
				--Code change end for version 0.4
					SET REF_Payment.NS_dfns:ChangeAmount.(XMLNSC.Attribute)currencyID		= InputRoot.XMLNSC.POSBasket.Header.BasketCurrencyID;
				END IF;
				
				SET TS_TimeStamp															= CAST(REF_LTItem.DateTimeCreated AS TIMESTAMP FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				SET REF_Payment.NS_oa:StartDateTime											= CAST(TS_TimeStamp AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				SET REF_Payment.NS_oa:EndDateTime											= CAST(TS_TimeStamp AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				SET REF_Payment.NS_dfns:EntryType											= 'Keyed';
				SET REF_Payment.NS_dfns:AuthorizingUserID									= REF_LTItem.AuthorisingUserID;
				
				IF COALESCE(REF_LTItem.VoidValue, '') <> '' THEN
					SET REF_Payment.NS_dfns:VoidStatus.NS_oa:Code 							= 'VOID ENTRY';
					
					--Code change starts for version 0.2 defect #63
					SET TS_TimeStamp														= CAST(REF_LTItem.VoidDateTime AS TIMESTAMP FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
					SET REF_Payment.NS_dfns:VoidStatus.NS_oa:EffectiveDateTime				= CAST(TS_TimeStamp AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
					--Code change ends for version 0.2 defect #63
				END IF;	
				
				LEAVE LTI;
			END IF;
			MOVE REF_LTItem NEXTSIBLING REPEAT TYPE NAME;		
		END WHILE;
		--END FOR;
		
		RETURN FALSE;
	END;
END MODULE;
