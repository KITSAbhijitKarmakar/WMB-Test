BROKER SCHEMA com.kingfisher.ukbq.SalesOrder

/****************************************************************************************************
* COPYRIGHT. <KINGFISHER INFORMATION TECHNOLOGY SERVICES 2012> ALL RIGHTS RESERVED. NO PART OF THIS *
* SOURCE CODE MAY BE REPRODUCED, STORED IN A RETRIEVAL SYSTEM, OR TRANSMITTED,IN ANY 				*
* FORM BY ANY MEANS, ELECTRONIC, MECHANICAL, PHOTOCOPYING, RECORDING OR OTHERWISE, 					*
* WITHOUT THE PRIOR WRITTEN PERMISSION OF <KINGFISHER INFORMATION TECHNOLOGY SERVICES>. 			*
****************************************************************************************************/

/****************************************************************************************************
* Node Name 				: Payment_CreditNoteTender												*
* Interface Id 				:  					 													*
* Interface Name 			: SalesOrder_processSalesOrder_POSBasket								*
* Message Flow 				: ProcessSalesOrder_POSBasket_RetailJ									*
* Message Flow Description 	: Convert POSBasket message to ProcessSalesOrder Mesasge				*
* Module Name 				: ProcessSalesOrder_POSBasket_RetailJ_CreditNoteTenderItem				*
* Description 				: Populate details for CreditNoteTenderItem								*
*																									*
* Version 	Date Author 	Author 				Description											*
* ======= 	========= 		================ 	=================== 								*
* 0.1 		1-APR-2013 		Sayantan Som 		The initial version. 								*
* 0.2 		22-JUN-2013 	Soutam Dutta 		Validated against ProcessSalesOrder xsd. 			*
****************************************************************************************************/
CREATE COMPUTE MODULE ProcessSalesOrder_POSBasket_RetailJ_CreditNoteTenderItem
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE REF_INRoot				REFERENCE TO InputRoot.XMLNSC.POSBasket;

		DECLARE REF_OUTSalesOrder		REFERENCE TO Environment.Variables.OutMessage.NS_dfns:ProcessSalesOrder;
		DECLARE REF_OUTSalesLine		REFERENCE TO REF_OUTSalesOrder.NS_dfns:DataArea.NS_dfns:SalesOrder;
		DECLARE	REF_OUTSalesOrderHeader	REFERENCE TO REF_OUTSalesLine.NS_dfns:SalesOrderHeader;
		DECLARE REF_OUTApplicationArea	REFERENCE TO REF_OUTSalesOrder.NS_oa:ApplicationArea;
		DECLARE REF_Payment				REFERENCE TO REF_OUTSalesOrderHeader.NS_dfns:Payment;
		DECLARE TS_TimeStamp			TIMESTAMP;
		DECLARE CH_RetJTend				CHARACTER;
		
		DECLARE REF_CNTItem				REFERENCE TO REF_INRoot.CreditNoteTenderItem;
		DECLARE CH_LineNumber 			CHARACTER;
		DECLARE IN_Count 				INTEGER;
		
		CNTI:WHILE LASTMOVE(REF_CNTItem)DO
		--FOR REF_CNTItem AS REF_INRoot.CreditNoteTenderItem[] DO
			SET CH_LineNumber = REF_CNTItem.LineNumber;
			IF REF_CNTItem.LineNumber NOT IN(Environment.LineNumber.{CH_LineNumber}[]) THEN 
				CREATE LASTCHILD OF Environment.LineNumber.{CH_LineNumber};
			
				SET IN_Count = CARDINALITY(REF_OUTSalesOrderHeader.NS_dfns:Payment[]);
			
				CREATE NEXTSIBLING OF REF_OUTSalesOrderHeader.NS_dfns:Payment[IN_Count] AS REF_Payment REPEAT;
--				CREATE NEXTSIBLING OF REF_OUTSalesOrderHeader.NS_dfns:Payment AS REF_Payment REPEAT;
			
				SET REF_Payment.(XMLNSC.Attribute)type 												= 'CREDIT NOTE TENDER';
				IF (REF_CNTItem.TenderType IS NOT NULL) AND (REF_CNTItem.TenderSubType IS NOT NULL) THEN
					SET CH_RetJTend = REF_CNTItem.TenderType || REF_CNTItem.TenderSubType;
	--			    SET REF_Payment.(XMLNSC.Attribute)id 											= THE(SELECT ITEM T.TENDERID FROM Database.TENDERDATA AS T
	--																									WHERE T.RETAILJCARDTYPE = CH_RetJTend);
					
					SET REF_Payment.(XMLNSC.Attribute)id 											= THE(SELECT ITEM T.TENDERID FROM CACHE_CONFIGDATA.TENDERDATA[] AS T
																										WHERE T.RETAILJCARDTYPE = CH_RetJTend);
	
				END IF;
	
				SET REF_Payment.NS_dfns:CreditNote.NS_oa:SerialNumber 								= REF_CNTItem.ReferenceNumber;
				IF (COALESCE(REF_CNTItem.NotFound,'') <> '') AND (REF_CNTItem.NotFound = '1') THEN
					SET REF_Payment.NS_dfns:CreditNote.NS_dfns:DetailsNotFoundIndicator			 	= 'true';
				ELSE
					SET REF_Payment.NS_dfns:CreditNote.NS_dfns:DetailsNotFoundIndicator 			= 'false';
				END IF;
				IF (COALESCE(REF_CNTItem.AlreadyRedeemed,'') <> '') AND (REF_CNTItem.AlreadyRedeemed = '1') THEN
					SET REF_Payment.NS_dfns:CreditNote.NS_dfns:RedeemedIndicator 					= 'true';
				ELSE
					SET REF_Payment.NS_dfns:CreditNote.NS_dfns:RedeemedIndicator 					= 'false';
				END IF;
				
				
				IF (COALESCE(REF_CNTItem.ValueOverridden,'') <> '') AND (REF_CNTItem.ValueOverridden = '1') THEN
					SET REF_Payment.NS_dfns:CreditNote.NS_dfns:ValueOverriddenIndicator 			= 'true';
				ELSE
					SET REF_Payment.NS_dfns:CreditNote.NS_dfns:ValueOverriddenIndicator 			= 'false';
				END IF;
									
				SET REF_Payment.NS_oa:LineNumber													= REF_CNTItem.LineNumber;
				IF (COALESCE(REF_CNTItem.IssuedAsChange,'') <> '1') AND (COALESCE(REF_CNTItem.TenderAmount,'') <> '') THEN
					SET REF_Payment.NS_oa:Amount 													= FUNC_ConvertPennytoPound(REF_CNTItem.TenderAmount,-1,2,NULL);
					SET REF_Payment.NS_oa:Amount.(XMLNSC.Attribute)currencyID						= InputRoot.XMLNSC.POSBasket.Header.BasketCurrencyID;
				END IF;
				
				
				SET TS_TimeStamp																	= CAST(REF_CNTItem.DateTimeCreated AS TIMESTAMP FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				SET REF_Payment.NS_oa:StartDateTime													= CAST(TS_TimeStamp AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				SET REF_Payment.NS_oa:EndDateTime													= CAST(TS_TimeStamp AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				SET REF_Payment.NS_dfns:EntryType 													= 'Keyed';
				SET REF_Payment.NS_dfns:AuthorizingUserID 											= REF_CNTItem.AuthorisingUserID;
				
				IF COALESCE(REF_CNTItem.VoidValue, '') <> '' THEN
					SET REF_Payment.NS_dfns:VoidStatus.NS_oa:Code 									= 'VOID ENTRY';
				END IF;
				IF COALESCE(REF_CNTItem.VoidDateTime,'') <> '' THEN
					SET TS_TimeStamp																= CAST(REF_CNTItem.VoidDateTime AS TIMESTAMP FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
					SET REF_Payment.NS_dfns:VoidStatus.NS_oa:EffectiveDateTime						= CAST(TS_TimeStamp AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				END IF;
				
				LEAVE CNTI;
			END IF;
			MOVE REF_CNTItem NEXTSIBLING REPEAT TYPE NAME;		
		END WHILE;						
		--END FOR;
		RETURN FALSE;
	END;
END MODULE;
