BROKER SCHEMA com.kingfisher.ukbq.SalesOrder

/****************************************************************************************************
* COPYRIGHT. <KINGFISHER INFORMATION TECHNOLOGY SERVICES 2012> ALL RIGHTS RESERVED. NO PART OF THIS *
* SOURCE CODE MAY BE REPRODUCED, STORED IN A RETRIEVAL SYSTEM, OR TRANSMITTED,IN ANY 				*
* FORM BY ANY MEANS, ELECTRONIC, MECHANICAL, PHOTOCOPYING, RECORDING OR OTHERWISE, 					*
* WITHOUT THE PRIOR WRITTEN PERMISSION OF <KINGFISHER INFORMATION TECHNOLOGY SERVICES>. 			*
****************************************************************************************************/

/****************************************************************************************************
* Node Name 				: Payment_SimpleVoucher													*
* Interface Id 				:  					 													*
* Interface Name 			: SalesOrder_processSalesOrder_POSBasket								*
* Message Flow 				: ProcessSalesOrder_POSBasket_RetailJ									*
* Message Flow Description 	: Convert POSBasket message to ProcessSalesOrder Mesasge				*
* Module Name 				: ProcessSalesOrder_POSBasket_RetailJ_SimpleVoucherTenderItem			*
* Description 				: Populate details for SimpleVoucherTenderItem							*
*																									*
* Version 	Date Author 	Author 				Description											*
* ======= 	========= 		================ 	=================== 								*
* 0.1 		1-APR-2013 		Sayantan Som 		The initial version. 								*
* 0.2 		24-JUN-2013 	Sourav Banu 		Validated against ProcessSalesOrder xsd.			*
* 0.3 		05-JUL-2013 	Subir Bhaumik 		Updated code for version 0.3. Added COALESCE 		*
*												function to handle null values.						*
****************************************************************************************************/
CREATE COMPUTE MODULE ProcessSalesOrder_POSBasket_RetailJ_SimpleVoucherTenderItem
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE REF_INRoot				REFERENCE TO InputRoot.XMLNSC.POSBasket;

		DECLARE REF_OUTSalesOrder		REFERENCE TO Environment.Variables.OutMessage.NS_dfns:ProcessSalesOrder;
		DECLARE REF_OUTSalesLine		REFERENCE TO REF_OUTSalesOrder.NS_dfns:DataArea.NS_dfns:SalesOrder;
		DECLARE	REF_OUTSalesOrderHeader	REFERENCE TO REF_OUTSalesLine.NS_dfns:SalesOrderHeader;
		DECLARE REF_OUTApplicationArea	REFERENCE TO REF_OUTSalesOrder.NS_oa:ApplicationArea;

		DECLARE REF_Payment				REFERENCE TO REF_OUTSalesOrderHeader.NS_dfns:Payment;
		DECLARE REF_PaymentDuplicate	REFERENCE TO REF_OUTSalesOrderHeader.NS_dfns:Payment; 
		DECLARE TS_TimeStamp			TIMESTAMP;
		DECLARE CH_RetJTend				CHARACTER;
		
		DECLARE CH_LineNumber 			CHARACTER;
		DECLARE IN_Count 				INTEGER;
		
		DECLARE REF_SVTItem  			REFERENCE TO REF_INRoot.SimpleVoucherTenderItem;
		
		--FOR REF_SVTItem AS REF_INRoot.SimpleVoucherTenderItem[] DO
		SVTI:WHILE LASTMOVE(REF_SVTItem)DO
			
			SET CH_LineNumber = REF_SVTItem.LineNumber;
			IF REF_SVTItem.LineNumber NOT IN(Environment.LineNumber.{CH_LineNumber}[]) THEN 
				
				CREATE LASTCHILD OF Environment.LineNumber.{CH_LineNumber};
			
				SET IN_Count = CARDINALITY(REF_OUTSalesOrderHeader.NS_dfns:Payment[]);
				--CREATE NEXTSIBLING OF REF_OUTSalesOrderHeader.NS_dfns:Payment AS REF_Payment REPEAT;
				
				CREATE NEXTSIBLING OF REF_OUTSalesOrderHeader.NS_dfns:Payment[IN_Count] AS REF_Payment REPEAT;
				
				SET REF_Payment.(XMLNSC.Attribute)type 	= 'SIMPLE VOUCHER TENDER';
				IF (REF_SVTItem.TenderType IS NOT NULL) AND (REF_SVTItem.TenderSubType IS NOT NULL) THEN
					
					SET CH_RetJTend = REF_SVTItem.TenderType || REF_SVTItem.TenderSubType;
					
	--			    SET REF_Payment.(XMLNSC.Attribute)id 		= THE(SELECT ITEM T.TENDERID FROM Database.TENDERDATA AS T
	--															WHERE T.RETAILJCARDTYPE = CH_RetJTend);
	
					SET REF_Payment.(XMLNSC.Attribute)id 		= THE(SELECT ITEM T.TENDERID FROM CACHE_CONFIGDATA.TENDERDATA[] AS T
																WHERE T.RETAILJCARDTYPE = CH_RetJTend);
				END IF;
				
				--Code commented for validation
				--SET REF_Payment.(XMLNSC.Attribute)type 	= 'SIMPLE VOUCHER TENDER';
				
				SET REF_Payment.NS_oa:LineNumber		= REF_SVTItem.LineNumber;
				--Code change starts for version 0.3
				--IF REF_SVTItem.TenderAmount <> '1' AND COALESCE(REF_SVTItem.TenderAmount,'') <> '' THEN
				--IF COALESCE(REF_SVTItem.TenderAmount, '') <> '1' AND COALESCE(REF_SVTItem.TenderAmount,'') <> '' THEN
				IF COALESCE(REF_SVTItem.IssuedAsChange, '') <> '1' AND COALESCE(REF_SVTItem.TenderAmount,'') <> '' THEN
				
				--Code change ends for version 0.3
					SET REF_Payment.NS_oa:Amount			= FUNC_ConvertPennytoPound(REF_SVTItem.TenderAmount,-1,2,NULL);
					SET REF_Payment.NS_oa:Amount.(XMLNSC.Attribute)currencyID	= InputRoot.XMLNSC.POSBasket.Header.BasketCurrencyID;
				END IF;
				SET TS_TimeStamp	= CAST(REF_SVTItem.DateTimeCreated AS TIMESTAMP FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				SET REF_Payment.NS_oa:StartDateTime		= CAST(TS_TimeStamp AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				SET REF_Payment.NS_oa:EndDateTime		= CAST(TS_TimeStamp AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				SET REF_Payment.NS_dfns:EntryType = 'Keyed';
				SET REF_Payment.NS_dfns:AuthorizingUserID =  REF_SVTItem.AuthorisingUserID;
				IF COALESCE(REF_SVTItem.VoidValue, '') <> '' THEN
					SET REF_Payment.NS_dfns:VoidStatus.NS_oa:Code = 'VOID ENTRY';
				END IF;
				
				IF COALESCE(REF_SVTItem.VoidDateTime,'') <> '' THEN
					SET TS_TimeStamp	= CAST(REF_SVTItem.VoidDateTime AS TIMESTAMP FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
					SET REF_Payment.NS_dfns:VoidStatus.NS_oa:EffectiveDateTime	= CAST(TS_TimeStamp AS CHARACTER FORMAT 'yyyy-MM-dd''T''HH:mm:ssZZZ');
				END IF;
				
				/***** This portion of the logic has been handled in PROC_CommonTenderLogic in Route_POSBasket node 
				
				IF REF_Payment.(XMLNSC.Attribute)type 	= 'SIMPLE VOUCHER TENDER' AND COALESCE(REF_SVTItem.RetainedChangeAmount,'')<>'' AND COALESCE(REF_Payment.NS_dfns:VoidStatus.NS_oa:Code,'') <> 'VOID ENTRY' THEN
					CREATE NEXTSIBLING OF REF_OUTSalesOrderHeader.NS_dfns:Payment AS REF_PaymentDuplicate REPEAT;
					SET REF_PaymentDuplicate 											= REF_Payment;
					SET REF_PaymentDuplicate.(XMLNSC.Attribute)id						= 'ChangeNotIssued';	
					SET REF_PaymentDuplicate.NS_oa:Amount 								= FUNC_ConvertPennytoPound(REF_SVTItem.RetainedChangeAmount,1,2,'ROUND_HALF_UP');
					SET REF_PaymentDuplicate.NS_oa:Amount.(XMLNSC.Attribute)currencyID	= InputRoot.XMLNSC.POSBasket.Header.BasketCurrencyID;
				END IF; 
				
				******/
				
				LEAVE SVTI;
			END IF;
			MOVE REF_SVTItem NEXTSIBLING REPEAT TYPE NAME;
		END WHILE;
		--END FOR;
		RETURN FALSE;
	END;
END MODULE;
