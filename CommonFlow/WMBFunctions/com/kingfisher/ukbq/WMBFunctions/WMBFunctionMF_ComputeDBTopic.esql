BROKER SCHEMA com.kingfisher.ukbq.WMBFunctions


CREATE COMPUTE MODULE WMBFunctionMF_ComputeDBTopic
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();

		DECLARE QueryRoot REFERENCE TO Environment.Variables.SQLQuery;
		SET QueryRoot.TABLE_NAME=InputRoot.XMLNSC.SQLQuery.TABLE_NAME;
		SET QueryRoot.INPUT.SELECT_CLAUSE.SELECT_COLUMN[1]=InputRoot.XMLNSC.SQLQuery.INPUT.SELECT_CLAUSE.SELECT_COLUMN[1];
		SET QueryRoot.INPUT.SELECT_CLAUSE.SELECT_COLUMN[2]=InputRoot.XMLNSC.SQLQuery.INPUT.SELECT_CLAUSE.SELECT_COLUMN[2];
		SET QueryRoot.INPUT.WHERE_CLAUSE.TOPICNAME=InputRoot.XMLNSC.SQLQuery.INPUT.WHERE_CLAUSE.TOPICNAME;
		SET QueryRoot.INPUT.WHERE_CLAUSE.TOPICSTRING=InputRoot.XMLNSC.SQLQuery.INPUT.WHERE_CLAUSE.TOPICSTRING;

		call com.kingfisher.ukbq.WMBFunctions.RetrieveValues(QueryRoot);
		SET OutputRoot.XMLNSC.Result.resultSet[] =QueryRoot.OUTPUT[];
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;