<?xml version="1.0" encoding="UTF-8"?><!-- edited with XMLSpy v2012 (http://www.altova.com) by A Patil (Kingfisher Information Technology Services UK Ltd) --><!--
  Author: Anand Patil
  Revision:    1.0
  Date:         23 Apr 2012
  Copyright 2012, All Rights Reserved 
  	
  Copyright (C) Kingfisher Group PLC. All Rights Reserved.
--><xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.kingfisher.com/oagis/9" xmlns="http://www.kingfisher.com/oagis/9" xmlns:ibmSchExtn="http://www.ibm.com/schema/extensions" xmlns:oa="http://www.openapplications.org/oagis/9" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:include schemaLocation="../Nouns/SalesOrder.xsd"/>
	<xsd:import namespace="http://www.openapplications.org/oagis/9" schemaLocation="../../../../org_openapplications_platform/1_2_1/Common/OAGi/Components/Components.xsd"/>
	<xsd:element ibmSchExtn:docRoot="true" name="ProcessSalesOrder" type="ProcessSalesOrderType">
		<xsd:annotation>
			<xsd:documentation source="http://www.openapplications.org/oagis/9">The ProcessSalesOrder provides the ability to request an application/ system to create a SalesOrder</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ProcessSalesOrderType">
		<xsd:complexContent>
			<xsd:extension base="oa:BusinessObjectDocumentType">
				<xsd:sequence>
					<xsd:element name="DataArea" type="ProcessSalesOrderDataAreaType">
						<xsd:annotation>
							<xsd:documentation source="http://www.openapplications.org/oagis/9">Is where the information that the BOD message carries is provided, in this case ProcessSalesOrder. The information consists of a Verb and one or more Nouns. The verb (Process) indicates the action to be performed on the Noun (SalesOrder).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ProcessSalesOrderDataAreaType">
		<xsd:sequence>
			<xsd:element ref="oa:Process"/>
			<xsd:element maxOccurs="unbounded" ref="SalesOrder"/>
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>