package com.bq.mb.utils;

import java.io.UnsupportedEncodingException;

/**
 * @author holdic01
 *
 * To change this generated comment edit the template variable "typecomment":
 * Window>Preferences>Java>Templates.
 * To enable and disable the creation of type comments go to
 * Window>Preferences>Java>Code Generation.
 */
public class EbcdicAsciiConverter {

   private static boolean debugging = true;

   /**
    * translate a single byte 0 .. 255 from ASCII (Latin-1) to EBCDIC.
    * Also works with signed bytes -128 .. 127.
    */
	public static byte[] ASCIIToEBCDIC (byte[] ascii ) throws UnsupportedEncodingException{
      // 0xff ugliness required because Java bytes are signed.
		String asciiString = new String(ascii,"ASCII");
		return asciiString.getBytes("Cp500");
		
//		      return AToE[ascii & 0xff] & 0xff;
    } // end ASCIIToEBCDIC
   /**
    * translate a single byte 0 .. 255 from  EBCDIC to ASCII (Latin-1).
    * Also works with signed bytes -128 .. 127.
    */

	public static byte[] EBCDICToASCII (byte[] ascii ) throws UnsupportedEncodingException{
      // 0xff ugliness required because Java bytes are signed.
		String asciiString = new String(ascii,"Cp500");
		return asciiString.getBytes("ASCII");

    } // end ASCIIToEBCDIC
   /**
     * translate a single byte 0 .. 255 from ASCII (Latin-1) to IBMOEM.
     * Also works with signed bytes -128 .. 127.
     */

   /**
    * ASCII to EBCDIC translate table.
    * source code generated by com.mindprod.trt.TrtBuild
    */

   private static byte[] AToE = {
      /* 0 */0, 1, 2, 3, 55, 45, 46, 47, 22, 5, 21, 11, 12, 13, 14, 15,
      /* 16 */  16, 17, 18, 63, 60, 61, 50, 38, 24, 25, 63, 39, 28, 29, 30, 31,
      /* 32 */  64, 90, 127, 123, 91, 108, 80, 125, 77, 93, 92, 78, 107, 96, 75, 97,
      /* 48 */  -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, 122, 94, 76, 126, 110, 111,
      /* 64 */  124, -63, -62, -61, -60, -59, -58, -57, -56, -55, -47, -46, -45, -44, -43, -42,
      /* 80 */  -41, -40, -39, -30, -29, -28, -27, -26, -25, -24, -23, 63, 63, 63, 63, 109,
      /* 96 */  -71, -127, -126, -125, -124, -123, -122, -121, -120, -119, -111, -110, -109, -108, -107, -106,
      /* 112 */  -105, -104, -103, -94, -93, -92, -91, -90, -89, -88, -87, 63, 79, 63, 63, 7,
      /* 128 */  63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
      /* 144 */  63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
      /* 160 */  64, 63, 74, 123, 63, 63, 63, 63, 63, 63, 63, 63, 95, 96, 63, 63,
      /* 176 */  63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
      /* 192 */  63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
      /* 208 */  63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
      /* 224 */  63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
      /* 240 */  63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63
   };

   /**
     * EBCDIC to ASCII translate table.
     * source code generated by com.mindprod.trt.TrtBuild
     */
   private static byte[] EToA = {
       /********00,  01, 02, 03, 04, 05, 06, 07, 08, 09, 0A, 0B, 0C, 0D, 0E, 0F*/  	
      /* 0x00*/  0,   1,  2,  3, 0,  9, 0,127, 0, 0, 0, 11, 12, 13, 14, 15,
      /* 0x10*/  16, 17, 18, 0, 0, 10,  8, 0, 24, 25, 0, 0, 28, 29, 30, 31,
      /* 0x20*/  0, 0, 28, 0, 0, 10, 23, 27, 0, 0, 0, 0, 0,  5,  6,  7,
      /* 0x30*/  0, 0, 22, 0, 0, 30, 0,  4, 0, 0, 0, 0, 20, 21, 0, 0,
      /* 0x40*/  32, 0, 0, 0, 0, 0, 0, 0, 0, 0,-94, 46, 60, 40, 43,124,
      /* 0x50*/  32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 36, 42, 41, 59,-84,
      /* 0x60*/  45, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 37, 95, 62, 63,
      /* 0x70*/  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 35, 64, 39, 61, 34,
      /* 0x80*/  0, 97, 98, 99,100,101,102,103,104,105, 0, 0, 0, 0, 0, 0,
      /* 0x90*/  0,106,107,108,109,110,111,112,113,114, 0, 0, 0, 0, 0, 0,
      /* 0xa0*/  0, 0,115,116,117,118,119,120,121,122, 0, 0, 0, 0, 0, 0,
      /* 0xb0*/  0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0,
      /* 0xc0*/  0, 65, 66, 67, 68, 69, 70, 71, 72, 73, 0, 0, 0, 0, 0, 0,
      /* 0xd0*/  0, 74, 75, 76, 77, 78, 79, 80, 81, 82, 0, 0, 0, 0, 0, 0,
      /* 0xe0*/  0, 0, 83, 84, 85, 86, 87, 88, 89, 90, 0, 0, 0, 0, 0, 0,
      /* 0xf0*/  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 0, 0, 0, 0, 0
   };

}



